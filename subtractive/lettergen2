#!/usr/bin/env python3

from collections import defaultdict
import sys
import re

args = sys.argv[1:]
N = int(args.pop(0))
RE_VALID_WORD = re.compile(r'^([a-z][a-z]){1,%s}$' % N)
RE_REPEATED_PAIR = re.compile(r'^(..)*(?P<letter1>.)(?P<letter2>.)(?P=letter1)(?P=letter2)')

words = defaultdict(set)

for word in open(args.pop(0)) if args else sys.stdin:
  word = word.rstrip('\n')
  if not RE_VALID_WORD.match(word):
    continue
  pairs = [pair for i, pair in enumerate(re.split(r'(..)', word)) if i % 2]
  sorted_word = ''.join(sorted(pairs))
  if RE_REPEATED_PAIR.match(sorted_word):
    continue
  for pair in pairs:
    words[pair].add(word)

while len(words) > N:
  pair = min(words.keys(), key=lambda pair: len(words[pair]))
  abandoned_words = words.pop(pair)
  words = dict((pair, words.difference(abandoned_words)) for pair, words in words.items())

print(','.join(sorted(words.keys())))

for word in sorted(set().union(*words.values())):
  print(word)
