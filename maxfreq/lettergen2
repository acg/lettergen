#!/usr/bin/env python

from collections import defaultdict
import sys
import re

args = sys.argv[1:]
N = int(args.pop(0))
RE_VALID_WORD = re.compile(r'^([a-z][a-z]){1,%s}$' % N)
RE_REPEATED_PAIR = re.compile(r'^(..)*(?P<letter1>.)(?P<letter2>.)(?P=letter1)(?P=letter2)')

freqs = defaultdict(lambda: 0)
words = []

for word in file(args.pop(0)) if args else sys.stdin:
  word = word.rstrip('\n')
  if not RE_VALID_WORD.match(word):
    continue
  pairs = [pair for i, pair in enumerate(re.split(r'(..)', word)) if i % 2]
  sorted_word = ''.join(sorted(pairs))
  if RE_REPEATED_PAIR.match(sorted_word):
    continue
  for pair in pairs:
    freqs[pair] += 1
  words.append(word)

tiles = set(sorted(freqs.keys(), key=lambda c: freqs[c])[-N:])

print ','.join(sorted(tiles))

for word in words:
  pairs = [pair for i, pair in enumerate(re.split(r'(..)', word)) if i % 2]
  if not set(pairs).difference(tiles):
    print word
